{"version":3,"sources":["dist/node_modules/browser-pack/_prelude.js","dist/src/unnotify.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","destroy","id","div","document","getElementById","animateOut","getAttribute","animateIn","classList","contains","add","remove","setTimeout","__destroy","parentNode","removeChild","__esModule","notificationCenter","notificationCenterClassName","eachNotificationClassName","notificationButtonClassName","defaultTimeout","init","notificationCenterStyle","createElement","type","innerHTML","getElementsByTagName","appendChild","body","insertBefore","firstChild","show","title","content","options","Math","random","toString","substring","customClass","titleDiv","titleSpan","innerText","closeButton","addEventListener","timeout","contentDiv","setAttribute"],"mappings":"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","file":"unnotify.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\r\nexports.__esModule = true;\r\nvar notificationCenter;\r\nvar notificationCenterClassName = \"unnotify-center\";\r\nvar eachNotificationClassName = \"unnotify-panel\";\r\nvar notificationButtonClassName = \"unnotify-button\";\r\nvar defaultTimeout = 5000;\r\n/**Initialises everything */\r\nfunction init() {\r\n    // Create the CSS rules required for the notification center\r\n    var notificationCenterStyle = document.createElement(\"style\");\r\n    notificationCenterStyle.type = \"text/css\";\r\n    notificationCenterStyle.innerHTML = \"\\n        .\" + notificationCenterClassName + \" {\\n            position: absolute;\\n            top: 10px;\\n            height: 100vh;\\n            max-height: 100vh;\\n            z-index: 25000;\\n            overflow-y: auto;\\n            padding: 10px;\\n            margin: 0px 10px;\\n        }\\n\\n        .\" + eachNotificationClassName + \" {\\n            padding: 10px;\\n            margin: 10px;\\n            border-radius: 5px;\\n            color: #fff;\\n            width: 350px;\\n            min-height: 40px;\\n            position: relative;\\n            top: 30px;\\n            z-index: 25100;\\n        }\\n\\n        .\" + notificationButtonClassName + \" {\\n            float: right;\\n            position: relative;\\n            top: -7px;\\n            right: -10px;\\n            background-color: transparent;\\n            border: none;\\n        }\\n\\n        .unnotify-success {\\n            background-color: rgba(27, 94, 32, 0.8);\\n        }\\n\\n        .unnotify-info {\\n            background-color: rgba(29, 121, 198, 0.8);\\n        }\\n\\n        .unnotify-warning {\\n            background-color: rgba(251, 114, 4, 0.8);\\n        }\\n\\n        .unnotify-danger {\\n            background-color: rgba(213, 0, 0, 0.8);\\n        }\\n\\n        /* Custom, iPhone Retina */ \\n        @media only screen and (min-width : 320px) {\\n            .\" + notificationCenterClassName + \" {\\n                width: 300px;\\n            }\\n\\n            .\" + eachNotificationClassName + \" {\\n                width: 100%;\\n            }\\n        }\\n    \\n        /* Extra Small Devices, Phones */ \\n        @media only screen and (min-width : 480px) {\\n            .\" + notificationCenterClassName + \" {\\n                width: 360px;\\n                right: 0px;\\n            }\\n\\n            .\" + eachNotificationClassName + \" {\\n                width: 100%;\\n            }\\n        }\\n    \\n        /* Small Devices, Tablets */\\n        @media only screen and (min-width : 768px) {\\n            .\" + notificationCenterClassName + \" {\\n                width: 360px;\\n                right: 0px;\\n            }\\n\\n            .\" + eachNotificationClassName + \" {\\n                width: 100%;\\n            }\\n        }\\n    \";\r\n    document.getElementsByTagName('head')[0].appendChild(notificationCenterStyle);\r\n    // Create the notification center\r\n    notificationCenter = document.createElement(\"div\");\r\n    notificationCenter.classList.add(notificationCenterClassName);\r\n    // document.body.appendChild(notificationCenter);\r\n    document.body.insertBefore(notificationCenter, document.body.firstChild);\r\n}\r\nexports.init = init;\r\n/**Displays the notification and returns the ID of the notification element. Title is a string, content can either be a string or HTML. */\r\nfunction show(title, content, options) {\r\n    var div = document.createElement(\"div\");\r\n    div.id = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n    div.classList.add(eachNotificationClassName);\r\n    if (options.type == \"success\" || options.type == \"info\" || options.type == \"danger\" || options.type == \"warning\") {\r\n        div.classList.add(\"unnotify-\" + options.type);\r\n    }\r\n    else if (typeof (options.customClass) != \"undefined\" || typeof (options.customClass) != null || options.customClass != \"\") {\r\n        div.classList.add(options.customClass);\r\n    }\r\n    var titleDiv = document.createElement(\"div\");\r\n    var titleSpan = document.createElement(\"span\");\r\n    titleSpan.innerText = title;\r\n    titleDiv.appendChild(titleSpan);\r\n    var closeButton = document.createElement(\"button\");\r\n    closeButton.classList.add(notificationButtonClassName);\r\n    closeButton.innerText = \"x\";\r\n    titleDiv.appendChild(closeButton);\r\n    closeButton.addEventListener('click', function () {\r\n        destroy(div.id);\r\n    });\r\n    // If timeout is 0, then don't autodestroy it\r\n    if (typeof (options.timeout) == \"undefined\" || typeof (options.timeout) == null || options.timeout < 0) {\r\n        setTimeout(function () {\r\n            destroy(div.id);\r\n        }, defaultTimeout);\r\n    }\r\n    else if (options.timeout > 0) {\r\n        setTimeout(function () {\r\n            destroy(div.id);\r\n        }, options.timeout);\r\n    }\r\n    var contentDiv = document.createElement(\"div\");\r\n    contentDiv.innerHTML = content;\r\n    if (typeof (options.animateIn) != \"undefined\") {\r\n        div.classList.add(\"animated\");\r\n        div.classList.add(options.animateIn);\r\n        div.setAttribute(\"data-animate-in\", options.animateIn);\r\n    }\r\n    else {\r\n        div.setAttribute(\"data-animate-in\", \"\");\r\n    }\r\n    if (typeof (options.animateOut) != \"undefined\") {\r\n        div.setAttribute(\"data-animate-out\", options.animateOut);\r\n    }\r\n    else {\r\n        div.setAttribute(\"data-animate-out\", \"\");\r\n    }\r\n    div.appendChild(titleDiv);\r\n    div.appendChild(contentDiv);\r\n    notificationCenter.appendChild(div);\r\n    return div.id;\r\n}\r\nexports.show = show;\r\n/**Destroys the notification with the associated ID */\r\nfunction destroy(id) {\r\n    var div = document.getElementById(id);\r\n    // Apply the animate-out class\r\n    var animateOut = div.getAttribute(\"data-animate-out\");\r\n    var animateIn = div.getAttribute(\"data-animate-in\");\r\n    if (animateOut.length != 0) {\r\n        if (!div.classList.contains(\"animated\")) {\r\n            div.classList.add(\"animated\");\r\n        }\r\n        if (animateIn.length != 0) {\r\n            div.classList.remove(animateIn);\r\n        }\r\n        div.classList.add(animateOut);\r\n        setTimeout(function () {\r\n            __destroy(div);\r\n        }, 1000);\r\n    }\r\n    else {\r\n        __destroy(div);\r\n    }\r\n}\r\nexports.destroy = destroy;\r\n/**Internal function to destroy the notification */\r\nfunction __destroy(div) {\r\n    try {\r\n        div.parentNode.removeChild(div);\r\n    }\r\n    catch (e) { }\r\n}\r\n"]}