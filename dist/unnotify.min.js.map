{"version":3,"sources":["dist/node_modules/browser-pack/_prelude.js","dist/src/unnotify.js"],"names":["f","exports","module","define","amd","window","global","self","this","unnotify","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","__esModule","notificationCenter","notificationCenterClassName","eachNotificationClassName","notificationButtonClassName","Unnotify","side","undefined","localNotificationCenterClassName","localEachNotificationClassName","notificationCenterStyle","document","createElement","type","innerHTML","getElementsByTagName","appendChild","classList","add","body","insertBefore","firstChild","prototype","show","title","content","options","div","id","Math","random","toString","substring","customClass","titleDiv","titleSpan","innerText","closeButton","unnotifyObj","addEventListener","destroy","timeout","setTimeout","contentDiv","animateIn","setAttribute","animateOut","unnotifyObj_1","div_1","getElementById","getAttribute","contains","remove","__destroy","parentNode","removeChild"],"mappings":"CAAA,SAAAA,GAAA,GAAA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,SAAA,GAAA,mBAAAG,QAAAA,OAAAC,IAAAD,UAAAH,OAAA,EAAA,oBAAAK,OAAAA,OAAA,oBAAAC,OAAAA,OAAA,oBAAAC,KAAAA,KAAAC,MAAAC,SAAAT,KAAA,CAAA,WAAA,OAAA,SAAAU,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAf,EAAA,IAAAoB,MAAA,uBAAAL,EAAA,KAAA,MAAAf,EAAAqB,KAAA,mBAAArB,EAAA,IAAAsB,EAAAV,EAAAG,IAAAd,YAAAU,EAAAI,GAAA,GAAAQ,KAAAD,EAAArB,QAAA,SAAAS,GAAA,IAAAE,EAAAD,EAAAI,GAAA,GAAAL,GAAA,OAAAI,EAAAF,GAAAF,IAAAY,EAAAA,EAAArB,QAAAS,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAd,QAAA,IAAA,IAAAkB,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,EAAAW,GAAA,SAAAP,EAAAhB,EAAAD,GCAA,aACAA,EAAAyB,YAAA,EACA,IAAAC,EACAC,EAAA,kBACAC,EAAA,iBACAC,EAAA,kBAGAC,EAAA,WAEA,SAAAA,EAAAC,GAEAA,OADAC,IAAAD,GAAA,OAAAA,EACA,QAEA,SAAAA,EACA,OAGA,QAEAxB,KAAA0B,iCAAAN,EAAA,IAAAI,EACAxB,KAAA2B,+BAAAN,EAAA,IAAAG,EAEA,IAAAI,EAAAC,SAAAC,cAAA,SACAF,EAAAG,KAAA,WACAH,EAAAI,UAAA,cAAAhC,KAAA0B,iCAAA,mLAAA1B,KAAA2B,+BAAA,gUAAAL,EAAA,utBAAAtB,KAAA0B,iCAAA,0GAAA1B,KAAA2B,+BAAA,qLAAA3B,KAAA0B,iCAAA,sDAAAF,EAAA,4GAAAxB,KAAA2B,+BAAA,8KAAA3B,KAAA0B,iCAAA,sDAAAF,EAAA,4GAAAxB,KAAA2B,+BAAA,mEACAE,SAAAI,qBAAA,QAAA,GAAAC,YAAAN,IAEAT,EAAAU,SAAAC,cAAA,QACAK,UAAAC,IAAApC,KAAA0B,kCAEAG,SAAAQ,KAAAC,aAAAnB,EAAAU,SAAAQ,KAAAE,YA0FA,OAvFAhB,EAAAiB,UAAAC,KAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAhB,SAAAC,cAAA,OACAe,EAAAC,GAAAC,KAAAC,SAAAC,SAAA,IAAAC,UAAA,EAAA,IAAAH,KAAAC,SAAAC,SAAA,IAAAC,UAAA,EAAA,IACAL,EAAAV,UAAAC,IAAApC,KAAA2B,gCACA,WAAAiB,EAAAb,MAAA,QAAAa,EAAAb,MAAA,UAAAa,EAAAb,MAAA,WAAAa,EAAAb,KACAc,EAAAV,UAAAC,IAAA,YAAAQ,EAAAb,WAEA,IAAAa,EAAA,aAAA,aAAAA,EAAA,aAAA,IAAAA,EAAAO,aACAN,EAAAV,UAAAC,IAAAQ,EAAAO,aAEA,IAAAC,EAAAvB,SAAAC,cAAA,OACAuB,EAAAxB,SAAAC,cAAA,QACAuB,EAAAC,UAAAZ,EACAU,EAAAlB,YAAAmB,GACA,IAAAE,EAAA1B,SAAAC,cAAA,UACAyB,EAAApB,UAAAC,IAAAd,GACAiC,EAAAD,UAAA,IACAF,EAAAlB,YAAAqB,GACA,IAAAC,EAAAxD,KACAuD,EAAAE,iBAAA,QAAA,WACAD,EAAAE,QAAAb,EAAAC,WAGA,IAAAF,EAAA,SAAA,aAAAA,EAAA,SAAAA,EAAAe,QAAA,EACAC,WAAA,WACAJ,EAAAE,QAAAb,EAAAC,KArDA,KAwDAF,EAAAe,QAAA,GACAC,WAAA,WACAJ,EAAAE,QAAAb,EAAAC,KACAF,EAAAe,SAEA,IAAAE,EAAAhC,SAAAC,cAAA,OAmBA,OAlBA+B,EAAA7B,UAAAW,OACA,IAAAC,EAAA,WACAC,EAAAV,UAAAC,IAAA,YACAS,EAAAV,UAAAC,IAAAQ,EAAAkB,WACAjB,EAAAkB,aAAA,kBAAAnB,EAAAkB,YAGAjB,EAAAkB,aAAA,kBAAA,SAEA,IAAAnB,EAAA,WACAC,EAAAkB,aAAA,mBAAAnB,EAAAoB,YAGAnB,EAAAkB,aAAA,mBAAA,IAEAlB,EAAAX,YAAAkB,GACAP,EAAAX,YAAA2B,GACA1C,EAAAe,YAAAW,GACAA,EAAAC,IAGAvB,EAAAiB,UAAAkB,QAAA,SAAAZ,GACA,IACA,IAAAmB,EAAAjE,KACAkE,EAAArC,SAAAsC,eAAArB,GAEAkB,EAAAE,EAAAE,aAAA,oBACAN,EAAAI,EAAAE,aAAA,mBACA,GAAAJ,EAAAhD,QACAkD,EAAA/B,UAAAkC,SAAA,aACAH,EAAA/B,UAAAC,IAAA,YAEA,GAAA0B,EAAA9C,QACAkD,EAAA/B,UAAAmC,OAAAR,GAEAI,EAAA/B,UAAAC,IAAA4B,GACAJ,WAAA,WACAK,EAAAM,UAAAL,IACA,MAGAD,EAAAM,UAAAL,GAGA,MAAAhE,MAGAqB,EAAAiB,UAAA+B,UAAA,SAAA1B,GACA,IACAA,EAAA2B,WAAAC,YAAA5B,GAEA,MAAA3C,MAEAqB,EAjHA,GAmHA9B,EAAA8B,SAAAA,eD3HA","file":"unnotify.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\r\nexports.__esModule = true;\r\nvar notificationCenter;\r\nvar notificationCenterClassName = \"unnotify-center\";\r\nvar eachNotificationClassName = \"unnotify-panel\";\r\nvar notificationButtonClassName = \"unnotify-button\";\r\nvar defaultTimeout = 5000;\r\n/**Class that can display the notifications */\r\nvar Unnotify = /** @class */ (function () {\r\n    /**Initialises everything. Accepts the side, whose dafault is right. Possible values are 'right', 'left' */\r\n    function Unnotify(side) {\r\n        if (side === undefined || side === null) {\r\n            side = \"right\";\r\n        }\r\n        else if (side === 'left') {\r\n            side = 'left';\r\n        }\r\n        else {\r\n            side = 'right';\r\n        }\r\n        this.localNotificationCenterClassName = notificationCenterClassName + \"-\" + side;\r\n        this.localEachNotificationClassName = eachNotificationClassName + \"-\" + side;\r\n        // Create the CSS rules required for the notification center\r\n        var notificationCenterStyle = document.createElement(\"style\");\r\n        notificationCenterStyle.type = \"text/css\";\r\n        notificationCenterStyle.innerHTML = \"\\n        .\" + this.localNotificationCenterClassName + \" {\\n            position: absolute;\\n            top: 20px;\\n            z-index: 25000;\\n            overflow-y: auto;\\n            overflow-x: hidden;\\n        }\\n\\n        .\" + this.localEachNotificationClassName + \" {\\n            padding: 10px;\\n            margin: 10px;\\n            border-radius: 5px;\\n            color: #fff;\\n            width: 350px;\\n            min-height: 40px;\\n            position: static;\\n            top: 30px;\\n            z-index: 25100;\\n            pointer-events: none;\\n        }\\n\\n        .\" + notificationButtonClassName + \" {\\n            float: right;\\n            position: relative;\\n            top: -7px;\\n            right: -10px;\\n            background-color: transparent;\\n            border: none;\\n            pointer-events: initial;\\n        }\\n\\n        .unnotify-success {\\n            background-color: rgba(27, 94, 32, 0.8);\\n        }\\n\\n        .unnotify-info {\\n            background-color: rgba(29, 121, 198, 0.8);\\n        }\\n\\n        .unnotify-warning {\\n            background-color: rgba(251, 114, 4, 0.8);\\n        }\\n\\n        .unnotify-danger {\\n            background-color: rgba(213, 0, 0, 0.8);\\n        }\\n\\n        /* Custom, iPhone Retina */ \\n        @media only screen and (min-width : 320px) {\\n            .\" + this.localNotificationCenterClassName + \" {\\n                margin: 0px 2px;\\n                padding: 0px 2px;\\n            }\\n\\n            .\" + this.localEachNotificationClassName + \" {\\n                width: 300px;\\n            }\\n        }\\n    \\n        /* Extra Small Devices, Phones */ \\n        @media only screen and (min-width : 480px) {\\n            .\" + this.localNotificationCenterClassName + \" {\\n                width: 360px;\\n                \" + side + \": 0px;\\n                padding: 10px;\\n                margin: 0px 20px;\\n            }\\n\\n            .\" + this.localEachNotificationClassName + \" {\\n                width: 100%;\\n            }\\n        }\\n    \\n        /* Small Devices, Tablets */\\n        @media only screen and (min-width : 768px) {\\n            .\" + this.localNotificationCenterClassName + \" {\\n                width: 360px;\\n                \" + side + \": 0px;\\n                padding: 10px;\\n                margin: 0px 20px;\\n            }\\n\\n            .\" + this.localEachNotificationClassName + \" {\\n                width: 100%;\\n            }\\n        }\\n    \";\r\n        document.getElementsByTagName('head')[0].appendChild(notificationCenterStyle);\r\n        // Create the notification center\r\n        notificationCenter = document.createElement(\"div\");\r\n        notificationCenter.classList.add(this.localNotificationCenterClassName);\r\n        // document.body.appendChild(notificationCenter);\r\n        document.body.insertBefore(notificationCenter, document.body.firstChild);\r\n    }\r\n    /**Displays the notification and returns the ID of the notification element. Title is a string, content can either be a string or HTML. */\r\n    Unnotify.prototype.show = function (title, content, options) {\r\n        var div = document.createElement(\"div\");\r\n        div.id = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n        div.classList.add(this.localEachNotificationClassName);\r\n        if (options.type == \"success\" || options.type == \"info\" || options.type == \"danger\" || options.type == \"warning\") {\r\n            div.classList.add(\"unnotify-\" + options.type);\r\n        }\r\n        else if (typeof (options.customClass) != \"undefined\" || typeof (options.customClass) != null || options.customClass != \"\") {\r\n            div.classList.add(options.customClass);\r\n        }\r\n        var titleDiv = document.createElement(\"div\");\r\n        var titleSpan = document.createElement(\"span\");\r\n        titleSpan.innerText = title;\r\n        titleDiv.appendChild(titleSpan);\r\n        var closeButton = document.createElement(\"button\");\r\n        closeButton.classList.add(notificationButtonClassName);\r\n        closeButton.innerText = \"x\";\r\n        titleDiv.appendChild(closeButton);\r\n        var unnotifyObj = this;\r\n        closeButton.addEventListener('click', function () {\r\n            unnotifyObj.destroy(div.id);\r\n        });\r\n        // If timeout is 0, then don't autodestroy it\r\n        if (typeof (options.timeout) == \"undefined\" || typeof (options.timeout) == null || options.timeout < 0) {\r\n            setTimeout(function () {\r\n                unnotifyObj.destroy(div.id);\r\n            }, defaultTimeout);\r\n        }\r\n        else if (options.timeout > 0) {\r\n            setTimeout(function () {\r\n                unnotifyObj.destroy(div.id);\r\n            }, options.timeout);\r\n        }\r\n        var contentDiv = document.createElement(\"div\");\r\n        contentDiv.innerHTML = content;\r\n        if (typeof (options.animateIn) != \"undefined\") {\r\n            div.classList.add(\"animated\");\r\n            div.classList.add(options.animateIn);\r\n            div.setAttribute(\"data-animate-in\", options.animateIn);\r\n        }\r\n        else {\r\n            div.setAttribute(\"data-animate-in\", \"\");\r\n        }\r\n        if (typeof (options.animateOut) != \"undefined\") {\r\n            div.setAttribute(\"data-animate-out\", options.animateOut);\r\n        }\r\n        else {\r\n            div.setAttribute(\"data-animate-out\", \"\");\r\n        }\r\n        div.appendChild(titleDiv);\r\n        div.appendChild(contentDiv);\r\n        notificationCenter.appendChild(div);\r\n        return div.id;\r\n    };\r\n    /**Destroys the notification with the associated ID */\r\n    Unnotify.prototype.destroy = function (id) {\r\n        try {\r\n            var unnotifyObj_1 = this;\r\n            var div_1 = document.getElementById(id);\r\n            // Apply the animate-out class\r\n            var animateOut = div_1.getAttribute(\"data-animate-out\");\r\n            var animateIn = div_1.getAttribute(\"data-animate-in\");\r\n            if (animateOut.length != 0) {\r\n                if (!div_1.classList.contains(\"animated\")) {\r\n                    div_1.classList.add(\"animated\");\r\n                }\r\n                if (animateIn.length != 0) {\r\n                    div_1.classList.remove(animateIn);\r\n                }\r\n                div_1.classList.add(animateOut);\r\n                setTimeout(function () {\r\n                    unnotifyObj_1.__destroy(div_1);\r\n                }, 1000);\r\n            }\r\n            else {\r\n                unnotifyObj_1.__destroy(div_1);\r\n            }\r\n        }\r\n        catch (e) { }\r\n    };\r\n    /**Internal function to destroy the notification */\r\n    Unnotify.prototype.__destroy = function (div) {\r\n        try {\r\n            div.parentNode.removeChild(div);\r\n        }\r\n        catch (e) { }\r\n    };\r\n    return Unnotify;\r\n}());\r\nexports.Unnotify = Unnotify;\r\n"]}